[{"/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/index.js":"1","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/App.js":"2","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/routes.js":"3","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/pages/User/index.js":"4","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/pages/Login/index.js":"5","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/pages/Admin/index.js":"6","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/services/api.js":"7","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/pages/NewUser/index.js":"8","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/pages/EditUser/index.js":"9"},{"size":198,"mtime":1612031206145,"results":"10","hashOfConfig":"11"},{"size":167,"mtime":1611797119837,"results":"12","hashOfConfig":"11"},{"size":1311,"mtime":1613332942256,"results":"13","hashOfConfig":"11"},{"size":1052,"mtime":1612356196858,"results":"14","hashOfConfig":"11"},{"size":2304,"mtime":1613329782558,"results":"15","hashOfConfig":"11"},{"size":5309,"mtime":1613332581281,"results":"16","hashOfConfig":"11"},{"size":434,"mtime":1613335637934,"results":"17","hashOfConfig":"11"},{"size":3430,"mtime":1613332614897,"results":"18","hashOfConfig":"11"},{"size":3631,"mtime":1613332594577,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"10mbsuh",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/index.js",[],["42","43"],"/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/App.js",[],"/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/routes.js",[],"/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/pages/User/index.js",[],"/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/pages/Login/index.js",[],"/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/pages/Admin/index.js",["44","45"],"import React, {useState, useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport api from '../../services/api';\nimport { FaSignOutAlt , FaTrash , FaPencilAlt, FaCreativeCommonsZero, FaUserPlus, FaHandHoldingUsd, FaCalendarCheck, FaLaptopCode} from \"react-icons/fa\";\nimport \"./styles.css\";\n\n\nfunction Admin(){\n    const history = useHistory();\n    const[users, setUsers] = useState([]);\n    const adm = JSON.parse(localStorage.getItem(\"User\"));\n    \n\n    \n    async function getUsers(){\n        try{\n            const response = await api.get(\"/admin\", {\n                headers: { Authorization: adm._id}\n            });\n            setUsers(response.data.response);\n        } catch(err) { console.log(err) }\n    }\n\n    function handleRegistration(){\n        return history.push(\"/admin/new\");\n    } \n\n    function handleLogout(){\n        localStorage.clear();\n        return history.push(\"/\");\n    }\n\n    async function handleDelete(_id){\n        try{\n                await api.delete(\"/admin\", {\n                headers: { Authorization: adm._id } , data :  {_id: _id} \n            })\n\n            setUsers(users.filter( user => user._id !== _id));\n        } catch (err) {console.log(err)}\n    }\n\n    async function handleResetAllBalance(){\n        try{\n                await api.put(\"/admin/zerarsaldo\", {\n                headers: { Authorization: adm._id } \n            })\n\n            setUsers(users.map( user => {\n                user.saldo = 0;\n                return user;\n            }));\n        } catch (err) {console.log(err)}\n    }\n\n    async function handleIncreaseBalance(){\n        try{\n                await api.put(\"/admin/aumentarsaldo\", {\n                headers: { Authorization: adm._id }\n            })\n\n            setUsers(users.map( user => {\n                let taxa = 1;\n                if(user.month) taxa += 0.2;\n                if(user.running) taxa += 0.1;\n                user.saldo += (40 + (5*user.week))*taxa;\n                return user;\n            }));\n        } catch (err) {console.log(err)}\n    }\n\n    function handleEdit(user){\n        localStorage.setItem(\"userEdited\", JSON.stringify(user));\n        history.push(\"/admin/editUser\");\n    }\n\n    useEffect(async () =>{\n        await getUsers() \n    },[]);\n    \n    \n    return(\n        <div className=\"admin\">\n            <div className=\"header-admin\">\n                <strong>\n                    Ol√°, {adm.name}\n                </strong>\n                <div className=\"buttons\">\n                    <button id=\"register\" onClick={handleRegistration}> <FaUserPlus size= \"2rem\"/> </button>\n                    <button id=\"reset\" onClick={handleResetAllBalance}> <FaCreativeCommonsZero size= \"2rem\"/></button>\n                    <button id=\"increase\" onClick={handleIncreaseBalance}><FaHandHoldingUsd size= \"2rem\"/></button>\n                    <button id=\"logout\" onClick={handleLogout}> <FaSignOutAlt size= \"2rem\"/> </button>\n                </div>\n\n            </div>\n            <div className=\"users\">\n                <ul className=\"table\">\n                    {users.map(user => {\n                        return(\n                            <li>\n                                <div className=\"user\">\n                                    <div className=\"info\">\n                                        <h4><strong>{user.name}</strong></h4>\n                                        <h5><strong>User:</strong> {user.userName}</h5>\n                                        <h5><strong>Saldo:</strong> {Intl.NumberFormat('pt-BR', {style: 'currency', currency: 'BRL'}).format(user.saldo) }</h5>\n                                        <h5><strong>Semanas com 10 horas:</strong> {user.week}</h5>\n                                        <div className=\"icons\">\n                                            {user.running ? \n                                                <h5 className=\"executando\"><FaLaptopCode color=\"green\" size=\"2rem\"/></h5>\n                                                : <h5 className=\"executando\"><FaLaptopCode color=\"red\" size=\"2rem\"/></h5>\n                                            }\n                                            {user.month ?\n                                                <h5 className=\"mes\"><FaCalendarCheck color=\"green\" size=\"2rem\"/></h5>\n                                                : <h5 className=\"mes\"> <FaCalendarCheck color=\"red\" size=\"2rem\"/></h5>\n                                            }\n                                        </div>\n                                    </div>\n\n                                    <div className=\"user-buttons\">\n                                        <button id=\"edit\" onClick={ ()=>{handleEdit(user)} }>\n                                            <FaPencilAlt size=\"1rem\" />\n                                        </button>\n                                        <button id=\"trash\" onClick={ ()=>{handleDelete(user._id)} }>\n                                            <FaTrash size=\"1rem\" />\n                                        </button>\n                                    </div>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n\n            </div>\n        </div>\n    )\n}\nexport default Admin;","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/services/api.js",[],"/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/pages/NewUser/index.js",["46"],"import React, {useState, useEffect} from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { FiArrowLeft } from \"react-icons/fi\";\n\nimport api from '../../services/api';\n\nimport './styles.css';\n\nfunction CreateUser() {\n    const [name, setName] = useState('');\n    const [userName, setUserName] = useState('');\n    //variavel que representa se vendeu projeto no mes\n    const [month, setMonth] = useState(false);\n    const [running, setRunning] = useState(false);\n    const [week, setWeek] = useState(0);\n\n    const history = useHistory();\n\n    const user = JSON.parse(localStorage.getItem('User'));\n\n    async function handleNewUser(e) {\n        console.log(user._id)\n       e.preventDefault();\n\n       const data = {\n           name,\n           userName,\n           month,\n           running,\n           week,\n       }\n\n       try{\n            await api.post('/admin/new', data, {\n                headers: {\n                    Authorization: user._id,\n                }\n            });\n\n            return history.push('/admin');\n       }catch(err){\n           alert('Erro ao cadastrar caso, tente novamente.');\n       }\n    }\n\n    \n\n    return (\n        <div className=\"new-user-container\">\n            <div className=\"content\">\n                \n                <h1>Cadastrar novo user</h1>\n                <Link className=\"back-link\" to=\"/admin\">\n                    <FiArrowLeft size ={16} color=\"#E02041\" />\n                    Voltar para home\n                </Link>\n            \n                <form onSubmit={handleNewUser}>\n                    <input \n                        placeholder=\"Nome\"\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                    />\n                    <input \n                        placeholder=\"Nome de usu√°rio\"\n                        value={userName}\n                        onChange={e => setUserName(e.target.value)}\n                    />\n                    <p>Vendeu algum projeto no m√™s?</p>\n                    <section>\n                        <button className=\"setValue\" type=\"button\" value= {true} onClick={e => setMonth(e.target.value)}>\n                            Sim\n                        </button>\n\n                        <button className=\"setValue\" type=\"button\" value= {false} onClick={e => setMonth(e.target.value)}>\n                            N√£o\n                        </button>\n                    </section>\n                    \n                    <p>Executando algum projeto?</p>\n                    <section>\n                        <button className=\"setValue\" type=\"button\" value= {true} onClick={e => setRunning(e.target.value)}>\n                        Sim\n                        </button>\n\n                        <button className=\"setValue\" type=\"button\" value= {false} onClick={e => setRunning(e.target.value)}>\n                            N√£o\n                        </button>\n                    </section>\n                    \n                    \n                    <input \n                        placeholder=\"Quantas semanas cumpriu as 10 horas semanais\"\n                        value={week}\n                        onChange={e => setWeek(e.target.value)}\n                    />\n\n                    <button className=\"button\" type=\"submit\">Cadastrar</button>\n\n                </form>\n            </div>\n        </div>  \n    )\n}\n\nexport default CreateUser;","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/pages/EditUser/index.js",["47"],"import React, {useEffect, useState} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FiArrowLeft } from \"react-icons/fi\";\n\nimport api from '../../services/api';\n\nimport './styles.css';\n\nfunction EditUSer() {\n    const adm = JSON.parse(localStorage.getItem('User'));\n    const user = JSON.parse(localStorage.getItem('userEdited'));\n    const [name, setName] = useState(user.name);\n    const [userName, setUserName] = useState(user.userName);\n    const [month, setMonth] = useState(user.month);\n    const [running, setRunning] = useState(user.running);\n    const [week, setWeek] = useState(user.week);\n\n    const history = useHistory();\n\n\n    async function handleEditedUser(e) {\n       e.preventDefault();\n\n       const data = {\n           _id: user._id,\n           name,\n           userName,\n           month,\n           running,\n           week,\n       }\n\n       try{\n            await api.put('/admin/user',data, {\n                headers: {\n                    Authorization: adm._id,\n                }\n            });\n            localStorage.removeItem('userEdited')\n            return history.push('/admin');\n       }catch(err){\n           alert('Erro ao cadastrar caso, tente novamente.');\n       }\n    }\n\n    function handleLeavePage(){\n        localStorage.removeItem('userEdited');\n        history.push('/admin');\n    }\n\n    return (\n        <div className=\"edit-user-container\">\n            <div className=\"content\">\n                \n                <h1>Editar Usu√°rio</h1>\n                <button className=\"back-link\" onClick={handleLeavePage}>\n                    <FiArrowLeft size ={16} color=\"#E02041\" />\n                    Voltar para home\n                </button>\n\n                <form onSubmit={handleEditedUser}>\n                    <input \n                        placeholder=\"Nome\"\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                    />\n                    <input \n                        placeholder=\"Nome de usu√°rio\"\n                        value={userName}\n                        onChange={e => setUserName(e.target.value)}\n                    />\n                    <p>Vendeu algum projeto no m√™s?</p>\n                    <section>\n                        <button className=\"setValue\" type=\"button\" value= {true} onClick={e => setMonth(e.target.value)}>\n                            Sim\n                        </button>\n\n                        <button className=\"setValue\" type=\"button\" value= {false} onClick={e => setMonth(e.target.value)}>\n                            N√£o\n                        </button>\n                    </section>\n                    \n                    <p>Executando algum projeto?</p>\n                    <section>\n                        <button className=\"setValue\" type=\"button\" value= {true} onClick={e => setRunning(e.target.value)}>\n                        Sim\n                        </button>\n\n                        <button className=\"setValue\" type=\"button\" value= {false} onClick={e => setRunning(e.target.value)}>\n                            N√£o\n                        </button>\n                    </section>\n                    \n                    \n                    <input \n                        placeholder=\"Quantas semanas cumpriu as 10 horas semanais\"\n                        value={week}\n                        onChange={e => setWeek(e.target.value)}\n                    />\n\n                    <button className=\"button\" type=\"submit\">Cadastrar</button>\n\n                </form>\n            </div>\n        </div>  \n    )\n}\n\nexport default EditUSer;",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":77,"column":15,"nodeType":"54","endLine":79,"endColumn":6},{"ruleId":"52","severity":1,"message":"55","line":79,"column":7,"nodeType":"56","endLine":79,"endColumn":9,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":26,"nodeType":"60","messageId":"61","endLine":1,"endColumn":35},{"ruleId":"58","severity":1,"message":"59","line":1,"column":16,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.","ArrayExpression",["64"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [getUsers]",{"range":"67","text":"68"},[2265,2267],"[getUsers]"]