[{"/home/erick/Documentos/Projetos/RGBWallet/front/src/index.js":"1","/home/erick/Documentos/Projetos/RGBWallet/front/src/App.js":"2","/home/erick/Documentos/Projetos/RGBWallet/front/src/routes.js":"3","/home/erick/Documentos/Projetos/RGBWallet/front/src/pages/Login/index.js":"4","/home/erick/Documentos/Projetos/RGBWallet/front/src/pages/User/index.js":"5","/home/erick/Documentos/Projetos/RGBWallet/front/src/pages/Admin/index.js":"6","/home/erick/Documentos/Projetos/RGBWallet/front/src/pages/EditUser/index.js":"7","/home/erick/Documentos/Projetos/RGBWallet/front/src/pages/NewUser/index.js":"8","/home/erick/Documentos/Projetos/RGBWallet/front/src/services/api.js":"9"},{"size":198,"mtime":1612815415490,"results":"10","hashOfConfig":"11"},{"size":167,"mtime":1612815415486,"results":"12","hashOfConfig":"11"},{"size":771,"mtime":1612815415490,"results":"13","hashOfConfig":"11"},{"size":2264,"mtime":1612833637395,"results":"14","hashOfConfig":"11"},{"size":1052,"mtime":1612815415490,"results":"15","hashOfConfig":"11"},{"size":5378,"mtime":1612826858875,"results":"16","hashOfConfig":"11"},{"size":4412,"mtime":1613338700418,"results":"17","hashOfConfig":"11"},{"size":4184,"mtime":1613338572129,"results":"18","hashOfConfig":"11"},{"size":116,"mtime":1612815415490,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1g591il",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/erick/Documentos/Projetos/RGBWallet/front/src/index.js",[],["41","42"],"/home/erick/Documentos/Projetos/RGBWallet/front/src/App.js",[],"/home/erick/Documentos/Projetos/RGBWallet/front/src/routes.js",[],"/home/erick/Documentos/Projetos/RGBWallet/front/src/pages/Login/index.js",["43"],"import React, {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\n\nimport Imagem from '../../assets/Logo.png';\n\nimport api from '../../services/api'\n\nimport './styles.css';\n\nfunction Login(){\n    const [userName, setuserName] = useState('');\n    const [passwd, setPasswd] = useState('');\n    const history = useHistory();\n    \n    async function handleLogin(event){\n        event.preventDefault();\n        let response = {};\n        const data = {\n            userName, \n            passwd\n        }\n        console.log(data)\n        try{\n            response = await api.post(\"/\", data);\n            console.log(response);\n        } catch (err){\n            console.log('não deu')\n        }\n        if(response.status === 200){\n            localStorage.setItem(\"User\", JSON.stringify(response.data));\n            if(response.data.admin === true) return (history.push(\"/admin\"));\n            else if(response.data.admin === false) return (history.push(\"/user\"));\n        }\n        else return (history.push(\"/\"));      \n    }\n\n    return(\n        <div className= \"Login\">\n            <div className=\"header\">\n                <img \n                    width = \"250px\"\n                    height = \"250px\"\n                    align=\"center\"\n                    src={Imagem}\n                /> \n            </div>\n            <div className=\"form\">\n                <div>\n                    <h2>\n                        Login\n                    </h2>\n                    <form onSubmit={handleLogin}>\n                        <input\n                            placeholder= \"User Name\"\n                            type= \"text\"\n                            value = {userName}\n                            onChange = {e => setuserName(e.target.value)}\n                        />\n                        \n                        <input \n                            placeholder=\"Password\"\n                            type = \"password\"\n                            value= {passwd}\n                            onChange= { e=> setPasswd(e.target.value)}\n                        />\n                        <button type=\"submit\">Enviar</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    )\n}\nexport default Login;","/home/erick/Documentos/Projetos/RGBWallet/front/src/pages/User/index.js",[],"/home/erick/Documentos/Projetos/RGBWallet/front/src/pages/Admin/index.js",["44","45"],"import React, {useState, useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport api from '../../services/api';\nimport { FaSignOutAlt , FaTrash , FaPencilAlt, FaCreativeCommonsZero, FaUserPlus, FaHandHoldingUsd, FaCalendarCheck, FaLaptopCode} from \"react-icons/fa\";\nimport \"./styles.css\";\n\n\nfunction Admin(){\n    const history = useHistory();\n    const[users, setUsers] = useState([]);\n    const adm = JSON.parse(localStorage.getItem(\"User\"));\n    \n    async function getUsers(){\n        try{\n            const response = await api.get(\"/admin\", {\n                headers: { Authorization: adm._id}\n            });\n            setUsers(response.data.response);\n        } catch(err) { console.log(err) }\n    }\n\n    function handleRegistration(){\n        return history.push(\"/admin/new\");\n    } \n\n    function handleLogout(){\n        localStorage.clear();\n        return history.push(\"/\");\n    }\n\n    async function handleDelete(_id){\n        try{\n                await api.delete(\"/admin\", {\n                headers: { Authorization: adm._id } , data :  {_id: _id} \n            })\n\n            setUsers(users.filter( user => user._id !== _id));\n        } catch (err) {console.log(err)}\n    }\n\n    async function handleResetAllBalance(){\n        try{\n                await api.put(\"/admin/zerarsaldo\", {\n                headers: { Authorization: adm._id } \n            })\n\n            setUsers(users.map( user => {\n                user.saldo = 0;\n                return user;\n            }));\n        } catch (err) {console.log(err)}\n    }\n\n    async function handleIncreaseBalance(){\n        try{\n                await api.put(\"/admin/aumentarsaldo\", {\n                headers: { Authorization: adm._id }\n            })\n\n            setUsers(users.map( user => {\n                let taxa = 1;\n                if(user.month) taxa += 0.2;\n                if(user.running) taxa += 0.1;\n                user.saldo += (40 + (5*user.week))*taxa;\n                return user;\n            }));\n        } catch (err) {console.log(err)}\n    }\n\n    function handleEdit(user){\n        localStorage.setItem(\"userEdited\", JSON.stringify(user));\n        history.push(\"/admin/editUser\");\n    }\n\n    useEffect(async () =>{\n        if(adm === null) return history.push(\"chome://new-tab-page/\");\n        else await getUsers() \n    },[]);\n    \n    \n    return(\n        <div className=\"admin\">\n            <div className=\"header-admin\">\n                <strong>\n                    Olá, {adm.name}\n                </strong>\n                <div className=\"buttons\">\n                    <button id=\"register\" onClick={handleRegistration}> <FaUserPlus size= \"2rem\"/> </button>\n                    <button id=\"reset\" onClick={handleResetAllBalance}> <FaCreativeCommonsZero size= \"2rem\"/></button>\n                    <button id=\"increase\" onClick={handleIncreaseBalance}><FaHandHoldingUsd size= \"2rem\"/></button>\n                    <button id=\"logout\" onClick={handleLogout}> <FaSignOutAlt size= \"2rem\"/> </button>\n                </div>\n\n            </div>\n            <div className=\"users\">\n                <ul className=\"table\">\n                    {users.map(user => {\n                        return(\n                            <li>\n                                <div className=\"user\">\n                                    <div className=\"info\">\n                                        <h4><strong>{user.name}</strong></h4>\n                                        <h5><strong>User:</strong> {user.userName}</h5>\n                                        <h5><strong>Saldo:</strong> {Intl.NumberFormat('pt-BR', {style: 'currency', currency: 'BRL'}).format(user.saldo) }</h5>\n                                        <h5><strong>Semanas com 10 horas:</strong> {user.week}</h5>\n                                        <div className=\"icons\">\n                                            {user.running ? \n                                                <h5 className=\"executando\"><FaLaptopCode color=\"green\" size=\"2rem\"/></h5>\n                                                : <h5 className=\"executando\"><FaLaptopCode color=\"red\" size=\"2rem\"/></h5>\n                                            }\n                                            {user.month ?\n                                                <h5 className=\"mes\"><FaCalendarCheck color=\"green\" size=\"2rem\"/></h5>\n                                                : <h5 className=\"mes\"> <FaCalendarCheck color=\"red\" size=\"2rem\"/></h5>\n                                            }\n                                        </div>\n                                    </div>\n                                    <div className=\"user-buttons\">\n                                        <button id=\"edit\" onClick={ ()=>{handleEdit(user)} }>\n                                            <FaPencilAlt size=\"1rem\" />\n                                        </button>\n                                        <button id=\"trash\" onClick={ ()=>{handleDelete(user._id)} }>\n                                            <FaTrash size=\"1rem\" />\n                                        </button>\n                                    </div>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n\n            </div>\n        </div>\n    )\n}\nexport default Admin;","/home/erick/Documentos/Projetos/RGBWallet/front/src/pages/EditUser/index.js",["46","47"],"/home/erick/Documentos/Projetos/RGBWallet/front/src/pages/NewUser/index.js",["48"],"/home/erick/Documentos/Projetos/RGBWallet/front/src/services/api.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":40,"column":17,"nodeType":"55","endLine":45,"endColumn":19},{"ruleId":"56","severity":1,"message":"57","line":75,"column":15,"nodeType":"58","endLine":78,"endColumn":6},{"ruleId":"56","severity":1,"message":"59","line":78,"column":7,"nodeType":"60","endLine":78,"endColumn":9,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":26,"nodeType":"64","messageId":"65","endLine":1,"endColumn":35},{"ruleId":"62","severity":1,"message":"66","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":14},{"ruleId":"62","severity":1,"message":"67","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":16},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'adm', 'getUsers', and 'history'. Either include them or remove the dependency array.","ArrayExpression",["70"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [adm, getUsers, history]",{"range":"73","text":"74"},[2335,2337],"[adm, getUsers, history]"]