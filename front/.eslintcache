[{"/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/index.js":"1","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/App.js":"2","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/routes.js":"3","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/pages/User/index.js":"4","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/pages/Login/index.js":"5","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/pages/Admin/index.js":"6","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/services/api.js":"7","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/pages/NewUser/index.js":"8"},{"size":198,"mtime":1612031206145,"results":"9","hashOfConfig":"10"},{"size":167,"mtime":1611797119837,"results":"11","hashOfConfig":"10"},{"size":655,"mtime":1612283949927,"results":"12","hashOfConfig":"10"},{"size":1065,"mtime":1612039473776,"results":"13","hashOfConfig":"10"},{"size":2520,"mtime":1612273022656,"results":"14","hashOfConfig":"10"},{"size":2681,"mtime":1612289806287,"results":"15","hashOfConfig":"10"},{"size":116,"mtime":1611584976776,"results":"16","hashOfConfig":"10"},{"size":3303,"mtime":1612289263439,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"10mbsuh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/index.js",[],["37","38"],"/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/App.js",[],"/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/routes.js",[],"/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/pages/User/index.js",["39"],"import React, { useState} from \"react\";\nimport {  useHistory } from \"react-router-dom\";\nimport { FaWallet, FaSignOutAlt } from \"react-icons/fa\";\n\nimport \"./styles.css\";\n\nexport default function Profile() {\n    \n    const history = useHistory();\n\n    const user = JSON.parse(localStorage.getItem(\"User\"));\n    \n\n    function handleLogout() {\n        localStorage.clear();\n\n        history.push('/');\n    }\n\n    return (\n        <div className=\"profile-container\">\n            <div className=\"pai\">\n                <div className=\"content\">\n                    <h1>\n                        <FaWallet size={25}/>\n                        <p>Conta</p>\n                    </h1>\n                    <p1>Saldo disponível</p1>\n                    <h2>{Intl.NumberFormat('pt-BR', {style: 'currency', currency: 'BRL'}).format(user.saldo) }</h2>\n                </div>\n                \n                <button onClick={handleLogout} type=\"button\">\n                    <FaSignOutAlt size={50}/> \n                </button>\n            </div>\n            \n        </div>\n    )\n}","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/pages/Login/index.js",["40"],"import React, {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\n\nimport Imagem from '../../assets/Logo.png';\n\nimport api from '../../services/api'\n\nimport './styles.css';\n\nfunction Login(){\n    const [userName, setuserName] = useState('');\n    const [passwd, setPasswd] = useState('');\n    const history = useHistory();\n    \n    async function handleLogin(event){\n        event.preventDefault();\n        let response = {};\n        const data = {\n            userName, \n            passwd\n        }\n        console.log(data)\n        try{\n            response = await api.post(\"/\", data);\n            console.log(response);\n        } catch (err){\n            console.log('não deu')\n        }\n        if(response.status === 200){\n            localStorage.setItem(\"User\", JSON.stringify(response.data));\n            if(response.data.admin === true) return (history.push(\"/admin\"));\n            else if(response.data.admin === false) return (history.push(\"/user\"));\n        }\n        else return (history.push(\"/\"));      \n    }\n\n    return(\n        <div className= \"Login\">\n            <div className=\"header\">\n                        <img \n                            width = {64}\n                            height = {64}\n                            align=\"center\"\n                            src={Imagem}\n                        />\n                        <div className = \"title\">\n                            <h1>\n                                RGBWallet\n                            </h1>\n                        </div>\n                        \n            </div>\n            <div className=\"form\">\n                <div>\n                    <h2>\n                        LOGIN\n                    </h2>\n                    <form onSubmit={handleLogin}>\n                        <input\n                            placeholder= \"User Name\"\n                            type= \"text\"\n                            value = {userName}\n                            onChange = {e => setuserName(e.target.value)}\n                        />\n                        \n                        <input \n                            placeholder=\"Password\"\n                            type = \"password\"\n                            value= {passwd}\n                            onChange= { e=> setPasswd(e.target.value)}\n                        />\n                        <button type=\"submit\">Enviar</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    )\n}\nexport default Login;","/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/pages/Admin/index.js",["41","42"],"/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/services/api.js",[],"/home/ga0321vr/Desktop/icmcjr/rgbwallet/front/src/pages/NewUser/index.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"52","line":40,"column":25,"nodeType":"53","endLine":45,"endColumn":27},{"ruleId":"54","severity":1,"message":"55","line":31,"column":15,"nodeType":"56","endLine":34,"endColumn":6},{"ruleId":"54","severity":1,"message":"57","line":34,"column":7,"nodeType":"58","endLine":34,"endColumn":9,"suggestions":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'adm', 'getUsers', and 'history'. Either include them or remove the dependency array.","ArrayExpression",["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [adm, getUsers, history]",{"range":"65","text":"66"},[949,951],"[adm, getUsers, history]"]